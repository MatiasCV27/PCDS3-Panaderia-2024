@model List<PanesModel>

@{
    ViewData["Title"] = "Ver_Panes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/ContCar.css"/>
}

<section class="contenedor mt-4 mb-4">
    <div class="contenedor-items">
        <!-- Contenedor de elementos -->
        @foreach (var item in Model)
        {
            <div class="item" style="background: white">
                <span class="titulo-item">@item.nombreP</span>
                <span class="idProducto-item d-none">@item.idPanes</span>
                <span class="otros-item">@item.marcaP</span>
                <img src="@item.imagenP" class="img-item"/>
                <span class="precio-item">S/. @item.costoP</span>
                <span class="stock-item d-none">Disponible @item.stockP</span>
                <button class="boton-item">Agregar al carrito</button>
            </div>
        }
    </div>
    <!-- Carrito de Compras -->
    <div class="carrito" id="carrito">
        <div class="header-carrito">
            <h4>Resumen de las Compras</h4>
        </div>
        <div class="carrito-items">
        </div>
        <div class="carrito-total">
            <div class="fila">
                <strong>Tu Total</strong>
                <span class="carrito-precio-total">
                    $120.000,00
                </span>
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div id="paypal-button-panes"></div>
            }
            @if (!User.Identity.IsAuthenticated)
            {
                <a class="textNoLogin" asp-controller="Usuarios" asp-action="GuardarPropioUser"><strong>Debes tener una cuenta para comprar..</strong></a>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/js/ContCar.js"></script>

    <script>

        paypal.Buttons({
            style: {
                color: 'blue',
                shape: 'pill',
                label: 'pay'
            },
            createOrder: function (data, actions) {
                // Obtener la desripcion:
                var elementos = document.getElementsByClassName('carrito-item-titulo');
                var listadoDeCompras = "";
                for (var i = 0; i < elementos.length; i++) {
                    listadoDeCompras += elementos[i].innerText + " x " + document.getElementsByClassName('carrito-item-cantidad')[i].value;
                    if (i < elementos.length - 1) {
                        listadoDeCompras += ", ";
                    }
                }
                // Obtener el total:
                var totalTexto = document.getElementsByClassName('carrito-precio-total')[0].innerText;
                var totalNumerico = totalTexto.replace('S/.', '').replace(',00', '');
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: parseInt(totalNumerico),
                        },
                        description: listadoDeCompras
                    }]
                }).catch(function (error) {
                    console.error('Error creating PayPal order:', error);
                });
            },
            onApprove: function (data, actions) {
                actions.order.capture().then(function (detalles) {
                    // Usuario del sistema
                    var usuario = "@User.Identity.Name"
                    // Costo
                    var costo = detalles.purchase_units[0].amount.value;
                    // Descripcion
                    var descripcion = detalles.purchase_units[0].description;
                    // Fecha actual
                    var fechaActual = new Date();
                    var dia = fechaActual.getDate(); var mes = fechaActual.getMonth() + 1; 
                    var año = fechaActual.getFullYear(); var horas = fechaActual.getHours();
                    var minutos = fechaActual.getMinutes(); var segundos = fechaActual.getSeconds();
                    var fechaFormateada = año + '-' + mes + '-' + dia + '   ' + horas + ':' + minutos + ':' + segundos
                    $.ajax({
                        url: '/Factura/CompraRealizada', 
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            usuario: usuario,
                            costo: costo,
                            descripcion: descripcion,
                            fecha: fechaFormateada
                        }),
                        success: function (response) {
                            console.log('Factura guardada exitosamente:', response);
                        },
                        error: function (xhr, status, error) {
                            console.error('Error al guardar la factura:', error);
                        }
                    });
                    console.log(detalles);
                });
            },
            onCancel(data) {
                alert("Pago Cancelado");
                console.log(data);
            }
        }).render('#paypal-button-panes');
    </script>

}